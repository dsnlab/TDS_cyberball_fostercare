%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% reoBatchMaker.m
%
% ~WEM3 [120210]
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% This is a batch script to reorient images based on manually determined 
% parameters. Using this instead of entering the params into a pre-existing
% script saves considerable time and tedium. MORE IMPORTANTLY, it reduces
% the extent to which the noise of human error is introduced into the data
% (because we all know that tedious pasting into scripts leads to
% mistakes).
%
% Execute: 
%          prior to any spm8 ppc steps if 'jiggling' funk --> anatomical 
%         
%          after coreg if anat --> mean funk...)
%
% call spm_jobman configuration so that our new jobs save properly

spm_jobman('initcfg')

%
% Make your [n x 12] matrix in Excel, and then copy/paste it into the
% MATLAB Command Window like this: 

% (NOTE: the code underneath won't affect
% successful execution of the script, but is there w/o comment to provide 
% a more salient example).

% whatevsies = [... % name a variable anything you want, press enter
    
%    'your pasted matrix (sans single quotes)' % instead of typing, just Paste the cells you copied in Excel 
    
%   ] % actually type this bracket, press enter


      % NOTE: there's no semicolon.  That way, a MATLAB formatted matrix 
      % will be printed to the Command Window.  This way, you can just copy
      % what's in the command window, and the formatting will look even 
      %when you paste the matrix into this here script)

% reo params: determined via spm8 Display, recorded in Excel

reoParams = [... % copy the data from the MATLAB Command Window, paste it below   
%~(CHANGE ME)~
    
%   right     forward   up        pitch     roll      yaw       [x y z] zoom (always = [1 1 1])      [x y z] shear (always = [0 0 0])  


%2.4	15	-23	0.2	-0.04	0	1	1	1	0	0	0
%-1	6	-4	0.2	0.05	0.1	1	1	1	0	0	0
%-1	13	-4	0.12	0	0.02	1	1	1	0	0	0
%-1	17	-13	0.02	0	-0.08	1	1	1	0	0	0
%1.5	11	-7	0.18	-0.02	0	1	1	1	0	0	0
%5	14	-1	0.13	0	0	1	1	1	0	0	0
%1	17	-16	0.04	0.03	0.03	1	1	1	0	0	0
%-0.5	9	-14	0.1	0.02	0.02	1	1	1	0	0	0
%1	10	-3	0	-0.05	0.05	1	1	1	0	0	0
%-5	1	-7	-0.1	0.01	-0.1	1	1	1	0	0	0
%0	6	-18	0.02	0.1	0.03	1	1	1	0	0	0
%0	-1	-24	0.08	-0.01	0.07	1	1	1	0	0	0
%2.5	8	-14	-0.01	0.02	0.02	1	1	1	0	0	0
%3	15	-4	0.07	0.1	0.01	1	1	1	0	0	0
%-2	9	-8	0.06	-0.1	-0.03	1	1	1	0	0	0
%4	6	-2	0	0	0	1	1	1	0	0	0
%0	20	4	0.25	-0.02	-0.02	1	1	1	0	0	0
%-1	8	-3	0.12	0	-0.01	1	1	1	0	0	0
%1	6	-25	-0.08	-0.07	0.07	1	1	1	0	0	0
%0	11	-21	-0.09	0.02	0.02	1	1	1	0	0	0
%2	14	-3	-0.01	-0.05	0	1	1	1	0	0	0
%3.5	7	-11	0	-0.02	-0.03	1	1	1	0	0	0
%0	15	3	0.08	0.02	0.01	1	1	1	0	0	0
%1	15	2	0.06	0	0.06	1	1	1	0	0	0
%0	6	-15	0.02	-0.06	-0.01	1	1	1	0	0	0
%-1	6	-20	0.12	0.08	0.04	1	1	1	0	0	0
%2	12	0	0.18	-0.02	0.02	1	1	1	0	0	0
%3	14	-2	0	0.01	0.1	1	1	1	0	0	0
%0.5	5	-22	-0.07	0	0.05	1	1	1	0	0	0
%-3	7	-18	-0.02	-0.02	-0.04	1	1	1	0	0	0
%-1	8	0	0.02	-0.12	-0.06	1	1	1	0	0	0
%-2.5	4	-20	0.08	0	0.02	1	1	1	0	0	0
%6	1	0.05	0.09	0.09	1	1	1	0	0	0
2 5 -4  0.2 0.01  0.02  1 1 1 0 0 0
-2  15  -4  -0.04 -0.02 -0.07 1 1 1 0 0 0
0 22  6 0.3 0 0 1 1 1 0 0 0
4 1 -6  -0.04 0.05  0.08  1 1 1 0 0 0
   ];

% subList = a cell string (a list of strings in cell format) of subject
% names. You don't need the paths, just the names of each subject's folder
% at the ~/Studies/YourStudy/Subjects/ level

subList = {... 
%~(CHANGE ME)~

%'301'
%'302'
%'303'
%'304'
%'306'
%'307'
%'308'
%'309'
%'310'
%'312'
%'313'
%'314'
%'315'
%'316'
%'317'
%'320'
%'321'
%'322'
%'323'
%'324'
%'325'
%'326'
%'327'
%'328'
%'329'
%'330'
%'331'
%'332'
%'333'
%'334'
%'335'
%'336'
%'337'
'340'
'341'
'342'
'343'

};

% subPath = the path to the Subjects directory 

subPath = '/vxfsvol/home/research/tds/fMRI/subjects/tds1';
% ~(CHANGE ME)~

% reoJobDir = the folder where you want all the spm jobs to go
% (essentially, pick a name and location for the equivalent of
% spmbatch_jobs folder)

reoJobDir = '/vxfsvol/home/research/tds/fMRI/scripts/ppc/spm/tds1/_reo_jobs';
% ~(CHANGE ME)~

% an empty cell that will hold a list of individual subjects' directories

subDir = cell(1,length(subList));

% a cell to hold the reorientation parameters for each subject

reoVec = cell(1,length(subList));

% loop over subjects

for i=1:length(subList);
    
    % get the subject's directory info
    
    subDir{i}=fullfile(subPath,subList{i},'/');
    
    % put the reoParams for that subject into a cell
    
    reoVec{i}=reoParams(i,:);
    

% this is the matlabbatch code that would be generated by the spm8 Batch
% Editor GUI if you chose 'File Selector (Batch Mode)' and 'Reorient'. What
% we're doing here is essentially just a more nuts & bolts version of 
% spmbatch.  The jobs will end up in reoJobDir.

matlabbatch{1}.cfg_basicio.file_fplist.dir = subDir(i);
matlabbatch{1}.cfg_basicio.file_fplist.filter = '(ru.*nii|mprage.nii)';
matlabbatch{1}.cfg_basicio.file_fplist.rec = 'FPListRec';
matlabbatch{2}.spm.util.reorient.srcfiles(1) = cfg_dep;
matlabbatch{2}.spm.util.reorient.srcfiles(1).tname = 'Images to reorient';
matlabbatch{2}.spm.util.reorient.srcfiles(1).tgt_spec{1}(1).name = 'class';
matlabbatch{2}.spm.util.reorient.srcfiles(1).tgt_spec{1}(1).value = 'cfg_files';
matlabbatch{2}.spm.util.reorient.srcfiles(1).tgt_spec{1}(2).name = 'strtype';
matlabbatch{2}.spm.util.reorient.srcfiles(1).tgt_spec{1}(2).value = 'e';
matlabbatch{2}.spm.util.reorient.srcfiles(1).sname = 'File Selector (Batch Mode): Selected Files (b_)';
matlabbatch{2}.spm.util.reorient.srcfiles(1).src_exbranch = substruct('.','val', '{}',{1}, '.','val', '{}',{1});
matlabbatch{2}.spm.util.reorient.srcfiles(1).src_output = substruct('.','files');
matlabbatch{2}.spm.util.reorient.transform.transprm = reoParams(i,:);
matlabbatch{2}.spm.util.reorient.prefix = 'o';

save((strcat(reoJobDir,filesep,subList{i},'_reo.mat')),'matlabbatch');

end
